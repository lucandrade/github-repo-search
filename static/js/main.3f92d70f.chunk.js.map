{"version":3,"sources":["serviceWorker.js","Constants.js","Functions/Fetch.js","Components/Form/SearchInput.js","Components/Form/Select.js","Components/Form/Form.js","Components/Listing/Repository.js","Functions/TransformApiResult.js","Components/Listing/Pagination.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","SORT_OPTIONS","value","label","ORDER_OPTIONS","instance","Axios","create","baseURL","fetch","a","query","sort","order","page","get","params","per_page","q","data","items","React","forwardRef","ref","disabled","onSearch","useState","setValue","fakeRef","useRef","useEffect","onKeyDown","e","keyCode","current","focus","preventDefault","document","body","addEventListener","removeEventListener","timeoutId","setTimeout","clearTimeout","className","htmlFor","type","id","onChange","target","placeholder","Select","options","onSelect","map","key","Form","setQuery","setSort","setOrder","searchRef","createRef","onSubmit","Repository","stars","forks","avatarUrl","url","name","description","src","alt","href","rel","TransformApiResult","total_count","total","repos","i","html_url","owner","avatar_url","stargazers_count","pages","Math","ceil","ITEMS_EACH_SIDE","floor","NUMBER_OF_ITEMS","Pagination","start","end","appendToEnd","push","onClick","App","setPages","setPage","setRepos","fetching","setFetching","failed","setFailed","setOptions","Fetch","runFetch","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3f92d70f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const SORT_OPTIONS = [\n  {\n    value: '',\n    label: 'Best Match'\n  },\n  {\n    value: 'stars',\n    label: 'Stars'\n  },\n  {\n    value: 'forks',\n    label: 'Forks'\n  },\n];\n\nexport const ORDER_OPTIONS = [\n  {\n    value: 'desc',\n    label: 'Descending'\n  },\n  {\n    value: 'asc',\n    label: 'Ascending'\n  },\n];\n\nexport const ITEMS_PER_PAGE = 20;\n\nexport const GITHUB_RESULT_LIMIT = 1000;\n","import Axios from 'axios';\n\nimport { ITEMS_PER_PAGE } from \"../Constants\";\n\nconst instance = Axios.create({\n  baseURL: 'https://api.github.com/search/repositories',\n});\n\nconst fetch = async ({ query, sort, order }, page = 1) => {\n  const { data } = await instance.get('', {\n    params: {\n      per_page: ITEMS_PER_PAGE,\n      q: query,\n      sort,\n      order,\n      page,\n    },\n  });\n\n  if (data && data.items) {\n    return data;\n  }\n\n  return {};\n};\n\nexport default fetch;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nconst SECONDS_TO_WAIT = 1000;\n\nfunction SearchInput({ query, disabled, onSearch }, ref) {\n  const [value, setValue] = useState(query);\n  const fakeRef = useRef(true);\n\n  useEffect(() => {\n    const onKeyDown = (e) => {\n      // Focus the input when \"/\" key is pressed\n      if (e.keyCode === 191 && ref.current) {\n        ref.current.focus();\n        e.preventDefault();\n      }\n    };\n\n    document.body.addEventListener('keydown', onKeyDown);\n\n    return () => document.body.removeEventListener('keydown', onKeyDown);\n  }, [ref]);\n\n  useEffect(() => {\n    // Do not run when it's mounted\n    if (fakeRef.current) {\n      fakeRef.current = false;\n    } else {\n      // Runs the search after 1 second the input is changed\n      const timeoutId = setTimeout(\n        () => onSearch(value),\n        SECONDS_TO_WAIT\n      );\n      return () => clearTimeout(timeoutId);\n    }\n  }, [value, onSearch]);\n\n  return (\n    <div className=\"form-input search\">\n      <label htmlFor=\"search\" disabled={disabled}>Search</label>\n      <input\n        ref={ref}\n        disabled={disabled}\n        type=\"text\"\n        id=\"search\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        placeholder={'Type \"/\"'} />\n    </div>\n  );\n}\n\nexport default React.forwardRef(SearchInput);\n","import React from \"react\";\n\nexport default function Select({ id, disabled, label, options, onSelect }) {\n  return (\n    <div className=\"form-input\">\n      <label disabled={disabled} htmlFor={id}>{label}</label>\n      <select id={id} disabled={disabled} onChange={e => onSelect(e.target.value)}>\n        {options.map(({ value, label }) => (\n          <option key={`${value}-${label}`} value={value}>{label}</option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import React, { createRef, useEffect, useRef, useState } from \"react\";\n\nimport SearchInput from \"./SearchInput\";\nimport Select from \"./Select\";\nimport { ORDER_OPTIONS, SORT_OPTIONS } from \"../../Constants\";\n\nexport default function Form({ disabled, onSearch }) {\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(SORT_OPTIONS[0].value);\n  const [order, setOrder] = useState(ORDER_OPTIONS[0].value);\n  const fakeRef = useRef(true);\n  const searchRef = createRef();\n\n  useEffect(() => {\n    // Do not run when it's mounted\n    if (fakeRef.current) {\n      fakeRef.current = false;\n    } else {\n      onSearch({ query, sort, order });\n    }\n  }, [fakeRef, query, sort, order, onSearch]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setQuery(searchRef.current.value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <SearchInput\n        ref={searchRef}\n        disabled={disabled}\n        query={query}\n        onSearch={setQuery} />\n      <Select\n        id=\"sort\"\n        label=\"Sort\"\n        disabled={disabled}\n        options={SORT_OPTIONS}\n        onSelect={setSort} />\n      <Select\n        id=\"order\"\n        label=\"Order\"\n        disabled={disabled}\n        options={ORDER_OPTIONS}\n        onSelect={setOrder} />\n    </form>\n  );\n}\n","import React from \"react\";\n\nexport default function Repository({ stars, forks, avatarUrl, url, name, description }) {\n  return (\n    <div className=\"item\">\n      <div className=\"image\">\n        <img src={avatarUrl} alt=\"Avatar\" />\n      </div>\n      <div className=\"details\">\n        <a href={url} rel=\"noopener noreferrer\" target=\"_blank\" className=\"title\">{name}</a>\n        <span>Stars: {stars}</span>\n        <span>Forks: {forks}</span>\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n}\n","import { GITHUB_RESULT_LIMIT, ITEMS_PER_PAGE } from \"../Constants\";\n\nexport default function TransformApiResult({ items = [], total_count }) {\n  const repos = items.map(i => ({\n    name: i.name,\n    description: i.description,\n    url: i.html_url,\n    avatarUrl: i.owner && i.owner.avatar_url ? i.owner.avatar_url : null,\n    stars: i.stargazers_count,\n    forks: i.forks,\n  }));\n\n  const total = total_count > GITHUB_RESULT_LIMIT ? GITHUB_RESULT_LIMIT : total_count;\n  const pages = Math.ceil(total / ITEMS_PER_PAGE);\n\n  return { repos, pages };\n}\n","import React from \"react\";\n\nconst NUMBER_OF_ITEMS = 9;\nconst ITEMS_EACH_SIDE = Math.floor(NUMBER_OF_ITEMS / 2);\n\nexport default function Pagination({ pages, current, onChange }) {\n  if (pages < 1) {\n    return null;\n  }\n\n  const items = [];\n  let start;\n  let end;\n  let appendToEnd = false;\n\n  if (pages < NUMBER_OF_ITEMS) {\n    start = 1;\n    end = pages;\n  } else if (current - ITEMS_EACH_SIDE < 1) {\n    start = 1;\n    end = start + NUMBER_OF_ITEMS - 1;\n  } else if (current + ITEMS_EACH_SIDE > pages) {\n    start = pages - NUMBER_OF_ITEMS;\n    end = pages;\n  } else {\n    start = current - ITEMS_EACH_SIDE;\n    end = start + NUMBER_OF_ITEMS - 1;\n  }\n\n  if (current - ITEMS_EACH_SIDE > 1) {\n    items.push(\n      <li\n        key={1}\n        onClick={() => current !== 1 && onChange(1)}\n        className={`${current === 1 ? 'active' : ''}`}>\n        {`1...`}\n      </li>\n    );\n    start++;\n  }\n\n  if (current + ITEMS_EACH_SIDE < pages) {\n    appendToEnd = true;\n    end--;\n  }\n\n  for (let a = start; a <= end; a += 1) {\n    items.push(\n      <li\n        key={a}\n        onClick={() => current !== a && onChange(a)}\n        className={`${current === a ? 'active' : ''}`}>\n        {a}\n      </li>\n    );\n  }\n\n  if (appendToEnd) {\n    items.push(\n      <li\n        key={pages}\n        onClick={() => current !== pages && onChange(pages)}\n        className={`${current === pages ? 'active' : ''}`}>\n        ...{pages}\n      </li>\n    );\n  }\n\n  return (\n    <ul className=\"pagination\">{items}</ul>\n  );\n}","import React, { useEffect, useState } from \"react\";\n\nimport Fetch from \"./Functions/Fetch\";\nimport Form from \"./Components/Form/Form\";\nimport Repository from \"./Components/Listing/Repository\";\nimport TransformApiResult from \"./Functions/TransformApiResult\";\nimport Pagination from \"./Components/Listing/Pagination\";\n\nexport default function App() {\n  const [pages, setPages] = useState(0);\n  const [page, setPage] = useState(1);\n  const [repos, setRepos] = useState([]);\n  const [fetching, setFetching] = useState(false);\n  const [failed, setFailed] = useState(false);\n  const [options, setOptions] = useState({});\n\n  useEffect(() => {\n    if (options.query) {\n      setPage(1);\n    }\n  }, [options]);\n\n  useEffect(() => {\n    if (options.query) {\n      const runFetch = async () => {\n        setFetching(true);\n        setFailed(false);\n\n        try {\n          const { repos, pages } = TransformApiResult(await Fetch(options, page));\n          setPages(pages);\n          setRepos(repos);\n        } catch (e) {\n          setFailed(true);\n        } finally {\n          setFetching(false);\n        }\n      };\n\n      runFetch();\n    }\n  }, [options, page]);\n\n  return (\n    <>\n      <div className=\"app\">\n        <h1>GitHub Repository Search</h1>\n        <Form disabled={fetching} onSearch={setOptions} />\n        {fetching && <div className=\"loading\">Loading</div>}\n        {failed && <div className=\"loading\">Error fetching github repositories</div>}\n        {!fetching && <Pagination pages={pages} current={page} onChange={setPage} />}\n        <div className=\"list\">\n          {repos.map(i =>  <Repository key={i.url} {...i} />)}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from \"./App\";\n\nimport './Resources/Style/app.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}